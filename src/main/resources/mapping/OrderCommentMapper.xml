<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.order.OrderCommentMapper">
  <resultMap id="BaseResultMap" type="com.model.entity.order.OrderComment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="is_parent" jdbcType="INTEGER" property="isParent" />
  </resultMap>
  <sql id="Base_Column_List">
    id, content, user_id, create_time, order_id, pid, is_parent
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.model.entity.order.OrderComment">
    insert into order_comment (id, content, user_id, 
      create_time, order_id, pid, 
      is_parent)
    values (#{id,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{orderId,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, 
      #{isParent,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.model.entity.order.OrderComment">
    insert into order_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="isParent != null">
        is_parent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="isParent != null">
        #{isParent,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.entity.order.OrderComment">
    update order_comment
    <set>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="isParent != null">
        is_parent = #{isParent,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.entity.order.OrderComment">
    update order_comment
    set content = #{content,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      order_id = #{orderId,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER},
      is_parent = #{isParent,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="orderCommentList" resultType="com.model.vo.order.CommentVO">
    select
    c.id id,
    c.content content,
    DATE_FORMAT(c.create_time,'%Y-%m-%d %T')  createTime,
    u.id userId,
    u.nickname nickname,
    u.head_url headUrl
    from order_comment c inner join `user` u on u.id=c.user_id
    where c.order_id=#{orderId}
  </select>
</mapper>